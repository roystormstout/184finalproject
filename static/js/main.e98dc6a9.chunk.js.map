{"version":3,"sources":["Components/Header.js","Components/About.js","Components/Goals.js","Components/Schedule.js","Components/Resources.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","projectName","names","map","name","summary","id","className","href","title","style","color","Component","About","descriptions","description","d","Goals","goals","goal","Schedule","schedule","s","key","time","g","Resources","resource","re","category","item","i","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","url","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e98dc6a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var projectName = this.props.data.projectName;\n      var names = this.props.data.names.map(name => <span>{ name } &nbsp;&nbsp;</span> );\n        var summary= this.props.data.summary;\n    }\n\n    return (\n      <header id=\"home\">\n\n      <nav id=\"nav-wrap\" className=\"opaque\">\n\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#description\">Problem Description</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#goals\">Goals</a></li>\n             <li><a className=\"smoothscroll\" href=\"#schedule\">Schedule</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resources\">Resources</a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">Project {projectName}</h1>\n             <h2 style={{ color: 'white' }}>{names}</h2>\n            <h3>{summary}.</h3>\n            <hr />\n         </div>\n      </div>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n        var descriptions = this.props.data.description.map(d => <p>{d}</p>);\n\n    }\n\n    return (\n      <section id=\"description\">\n          <div className=\"row\">\n          <h2 className=\" columns main-col\">Project Description</h2>\n          </div>\n      <div className=\"row\">\n         <div className=\" columns main-col\">\n             {descriptions}\n         </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Goals extends Component {\n  render() {\n\n    if(this.props.data){\n      var goals = this.props.data.goals.map(function(goal){\n          return <div><ul><li><p>{goal}</p></li></ul></div>\n      })\n\n    }\n\n    return (\n      <section id=\"goals\">\n\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Goals + </span></h1>\n             <h1><span>Deliverables</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {goals}\n               </div>\n            </div>\n         </div>\n      </div>\n\n\n   </section>\n    );\n  }\n}\n\nexport default Goals;\n","import React, { Component } from 'react';\n\nclass Schedule extends Component {\n  render() {\n\n    if(this.props.data){\n      var schedule = this.props.data.schedule.map(function(s) {\n          return <div key={s.time}><h3>{s.time}</h3>\n              <ul>\n                  <p>{s.goals.map(g => <li>{g}</li>)}</p></ul>\n          </div>\n      })\n    }\n\n    return (\n      <section id=\"schedule\">\n\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Schedule </span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {schedule}\n               </div>\n            </div>\n         </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from 'react';\n\nclass Resources extends Component {\n  render() {\n\n    if(this.props.data){\n      var resource = this.props.data.resource.map(function(re){\n        return <div key={re.category}><h3>{re.category}</h3>\n            <ul>\n                <p>{re.item.map(i => <li>{i}</li>)}</p></ul>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"resources\">\n      <div className=\"row skill\">\n\n         <div className=\"three columns header-col\">\n            <h1><span>Resources </span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n\t\t\t\t\t  {resource}\n\t\t\t</div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Resources;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport Goals from './Components/Goals';\nimport Schedule from './Components/Schedule';\nimport Resources from  './Components/Resources';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Goals data={this.state.resumeData.resume}/>\n        <Schedule data={this.state.resumeData.resume}/>\n        <Resources data={this.state.resumeData.resume}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}